apiVersion: v1
kind: ConfigMap
metadata:
  name: alertmanager-config
  namespace: phrsat
  labels:
    app: alertmanager
    component: monitoring
    compliance: hipaa
    security-tier: critical
data:
  alertmanager.yml: |
    global:
      resolve_timeout: 5m
      smtp_smarthost: smtp.phrsat.com:587
      smtp_from: alertmanager@phrsat.com
      smtp_auth_username: ${SMTP_USERNAME}
      smtp_auth_password: ${SMTP_PASSWORD}
      slack_api_url: ${SLACK_WEBHOOK_URL}
      pagerduty_url: ${PAGERDUTY_URL}
      victorops_api_url: ${VICTOROPS_API_URL}
      datadog_api_key: ${DATADOG_API_KEY}

    templates:
      - /etc/alertmanager/templates/*.tmpl

    route:
      group_by: ['alertname', 'cluster', 'service', 'severity', 'team']
      group_wait: 30s
      group_interval: 5m
      repeat_interval: 4h
      receiver: default-receiver

      routes:
        # HIPAA-critical alerts get highest priority
        - match:
            severity: critical
            compliance: hipaa
          receiver: hipaa-critical
          group_wait: 0s
          repeat_interval: 30m
          continue: true

        # Critical severity alerts
        - match:
            severity: critical
          receiver: critical-alerts
          group_wait: 0s
          repeat_interval: 1h

        # Security team alerts
        - match:
            team: security
          receiver: security-team
          group_wait: 0s
          repeat_interval: 30m

        # Warning severity alerts
        - match:
            severity: warning
          receiver: warning-alerts
          group_wait: 30s
          repeat_interval: 2h

        # Infrastructure alerts
        - match:
            type: infrastructure
          receiver: infrastructure-team
          group_wait: 1m
          repeat_interval: 3h

    inhibit_rules:
      # Critical alerts inhibit related warning alerts
      - source_match:
          severity: critical
        target_match:
          severity: warning
        equal: ['alertname', 'cluster', 'service']

      # Warning alerts inhibit related info alerts
      - source_match:
          severity: warning
        target_match:
          severity: info
        equal: ['alertname', 'cluster', 'service']

    receivers:
      # Default receiver for uncategorized alerts
      - name: default-receiver
        email_configs:
          - to: monitoring@phrsat.com
            send_resolved: true
            html: '{{ template "email.default.html" . }}'

      # HIPAA-critical alerts receiver with PagerDuty integration
      - name: hipaa-critical
        email_configs:
          - to: compliance@phrsat.com
            send_resolved: true
            html: '{{ template "email.hipaa.html" . }}'
        pagerduty_configs:
          - service_key: ${PAGERDUTY_COMPLIANCE_KEY}
            send_resolved: true

      # Critical alerts receiver with Slack and PagerDuty
      - name: critical-alerts
        email_configs:
          - to: oncall@phrsat.com
            send_resolved: true
            html: '{{ template "email.critical.html" . }}'
        slack_configs:
          - channel: '#critical-alerts'
            send_resolved: true
            title: '{{ template "slack.title" . }}'
            text: '{{ template "slack.text" . }}'
        pagerduty_configs:
          - service_key: ${PAGERDUTY_CRITICAL_KEY}
            send_resolved: true

      # Security team receiver with VictorOps integration
      - name: security-team
        email_configs:
          - to: security@phrsat.com
            send_resolved: true
            html: '{{ template "email.security.html" . }}'
        slack_configs:
          - channel: '#security-alerts'
            send_resolved: true
            title: '{{ template "slack.security.title" . }}'
            text: '{{ template "slack.security.text" . }}'
        victorops_configs:
          - api_key: ${VICTOROPS_API_KEY}
            routing_key: security-team
            send_resolved: true

      # Infrastructure team receiver with DataDog webhook
      - name: infrastructure-team
        email_configs:
          - to: infrastructure@phrsat.com
            send_resolved: true
            html: '{{ template "email.infrastructure.html" . }}'
        slack_configs:
          - channel: '#infrastructure'
            send_resolved: true
            title: '{{ template "slack.infrastructure.title" . }}'
            text: '{{ template "slack.infrastructure.text" . }}'
        webhook_configs:
          - url: ${DATADOG_WEBHOOK_URL}
            send_resolved: true