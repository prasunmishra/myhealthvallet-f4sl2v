apiVersion: v1
kind: ConfigMap
metadata:
  name: grafana-config
  namespace: phrsat
  labels:
    app: grafana
    component: monitoring
    compliance: hipaa
data:
  grafana.ini: |
    [server]
    protocol = https
    http_port = 3000
    domain = grafana.phrsat.local
    root_url = %(protocol)s://%(domain)s/
    cert_file = /etc/grafana/certs/tls.crt
    cert_key = /etc/grafana/certs/tls.key
    enforce_domain = true
    
    [security]
    admin_user = ${GRAFANA_ADMIN_USER}
    admin_password = ${GRAFANA_ADMIN_PASSWORD}
    secret_key = ${GRAFANA_SECRET_KEY}
    disable_gravatar = true
    cookie_secure = true
    strict_transport_security = true
    strict_transport_security_max_age_seconds = 31536000
    content_security_policy = true
    content_security_policy_template = "default-src 'self'; script-src 'self' 'unsafe-eval'; style-src 'self' 'unsafe-inline';"
    x_content_type_options = true
    x_xss_protection = true
    allow_embedding = false
    session_lifetime = 8h
    
    [auth]
    disable_login_form = false
    oauth_auto_login = false
    disable_signout_menu = false
    login_maximum_inactive_lifetime_duration = 8h
    login_maximum_lifetime_duration = 24h
    token_rotation_interval_minutes = 10
    disable_brute_force_login_protection = false
    
    [users]
    allow_sign_up = false
    auto_assign_org = true
    auto_assign_org_role = Viewer
    viewers_can_edit = false
    editors_can_admin = false
    default_theme = light
    
    [analytics]
    reporting_enabled = false
    check_for_updates = false
    check_for_plugin_updates = false
    feedback_links_enabled = false
    
    [log]
    mode = console file
    level = info
    filters = filtering_rules.conf
    
    [metrics]
    enabled = true
    basic_auth_username = ${METRICS_USER}
    basic_auth_password = ${METRICS_PASSWORD}
    interval_seconds = 10
    
    [unified_alerting]
    enabled = true
    execute_alerts = true
    evaluation_timeout = 30s
    max_attempts = 3
    min_interval_seconds = 10
    
    [auth.anonymous]
    enabled = false
    
    [snapshots]
    enabled = false
    
    [dashboards]
    versions_to_keep = 20
    min_refresh_interval = 1m
    
    [panels]
    disable_sanitize_html = false
    
    [plugins]
    enable_alpha = false
    
    [feature_toggles]
    enable = publicDashboards
    
  datasources.yaml: |
    apiVersion: 1
    datasources:
      - name: Prometheus
        type: prometheus
        access: proxy
        url: http://prometheus:9090
        isDefault: true
        version: 1
        editable: false
        jsonData:
          timeInterval: "30s"
          queryTimeout: "30s"
          httpMethod: "POST"
          manageAlerts: true
          alertmanagerUid: "alertmanager"
          prometheusType: "Prometheus"
          prometheusVersion: "2.45.0"
          cacheLevel: "High"
          disableRecordingRules: false
          incrementalQueryAlignment: true
          exemplarTraceIdDestinations:
            - name: "traceID"
              datasourceUid: "jaeger"
        secureJsonData:
          httpHeaderValue1: "${PROMETHEUS_API_KEY}"
        
  filtering_rules.conf: |
    [filters]
    # Filter out sensitive health information from logs
    1:pattern = "(?i)(ssn|credit.?card|password|secret|token|key)"
    1:action = mask
    
    # Filter PII data
    2:pattern = "(?i)(email|phone|address|name|dob)"
    2:action = mask
    
    # Filter health record identifiers
    3:pattern = "(?i)(mrn|patient.?id|record.?number)"
    3:action = mask